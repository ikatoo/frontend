name: E2E Tests

on: [push, workflow_dispatch]

jobs:
  e2e_tests:
    runs-on: ubuntu-latest

    env:
      VITE_API_URL: http://localhost:8000
      VITE_PORT: 3000

      BACKEND_PORT: 8000

      POSTGRES_HOSTNAME: postgres
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DBNAME: postgres

      PRIVATE_KEY: some_key
      REFRESH_PRIVATE_KEY: some_private_key

      CLOUDINARY_APIKEY: ${{ secrets.CLOUDINARY_APIKEY }}
      CLOUDINARY_APISECRET: ${{ secrets.CLOUDINARY_APISECRET }}
      CLOUDINARY_CLOUDNAME: mckatoo
      CLOUDINARY_FOLDER: ikatoo
      CLOUDINARY_URL: cloudinary://${{ secrets.CLOUDINARY_APIKEY }}:${{ secrets.CLOUDINARY_APISECRET }}@mckatoo

      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_SECURE: true
      SMTP_SERVER_ADDRESS: smtp.gmail.com
      SMTP_SERVER_PORT: 465
      SMTP_USERNAME: mckatoo@gmail.com

    services:
      db-test:
        image: postgres
        env:
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Frontend Repository
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref_name}}
          path: frontend

      - name: Checkout Backend Repository
        uses: actions/checkout@v4
        with:
          ref: dev
          repository: ikatoo/backend
          path: backend

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install System Dependencies
        run: sudo apt-get install -y postgresql-client curl

      - name: Create Tables
        env:
          PGPASSWORD: postgres
        run: |
          psql -v ON_ERROR_STOP=1 --host localhost --username postgres --dbname postgres -f ./backend/src/infra/db/pg-promise/init.sql
          psql -v ON_ERROR_STOP=1 --host localhost --username postgres --dbname postgres -c "select * from users;"

      - name: Install Backend Dependencies
        working-directory: backend
        run: npm install

      - name: Run Backend Dev
        working-directory: backend
        run: docker run --name backend
          -d --user=node
          --workdir=/home/node/app
          -v ./:/home/node/app
          -e "PORT=8000"
          -e "POSTGRES_HOSTNAME=localhost"
          -e "POSTGRES_PASSWORD=postgres"
          -e "POSTGRES_USER=postgres"
          -e "POSTGRES_DBNAME=postgres"
          -e "PRIVATE_KEY=$PRIVATE_KEY"
          -e "REFRESH_PRIVATE_KEY=$REFRESH_PRIVATE_KEY"
          -e "CLOUDINARY_APIKEY=$CLOUDINARY_APIKEY"
          -e "CLOUDINARY_APISECRET=$CLOUDINARY_APISECRET"
          -e "CLOUDINARY_CLOUDNAME=$CLOUDINARY_CLOUDNAME"
          -e "CLOUDINARY_FOLDER=$CLOUDINARY_FOLDER"
          -e "CLOUDINARY_URL=$CLOUDINARY_URL"
          -e "SMTP_PASSWORD=$SMTP_PASSWORD"
          -e "SMTP_SECURE=$SMTP_SECURE"
          -e "SMTP_SERVER_ADDRESS=$SMTP_SERVER_ADDRESS"
          -e "SMTP_SERVER_PORT=$SMTP_SERVER_PORT"
          -e "SMTP_USERNAME=$SMTP_USERNAME"
          --expose=$BACKEND_PORT
          -p "$BACKEND_PORT:$BACKEND_PORT"
          node:20-alpine
          npm run start:dev

      - name: Create Test User
        run: |
          curl http://localhost:8000
          # echo "CLOUDINARY_APISECRET ======= ${{ secrets.CLOUDINARY_APISECRET }}"
          # echo "CLOUDINARY_APIKEY ========== ${{ secrets.CLOUDINARY_APIKEY }}"
          # docker inspect backend
          docker logs backend
        # run: curl http://localhost:8000
        # run: >-
          # curl http://localhost:8000

      # - name: Enable Test User
      #   run: psql -v ON_ERROR_STOP=1 --host localhost --username postgres --dbname postgres -c 'update users set "enabled" = true;'

      # - name: Install Frontend Dependencies
      #   run: npm ci

      # - name: Run Vite
      #   run: docker run --name frontend
      #     -d --user=node
      #     --workdir=/home/node/app
      #     -v ./:/home/node/app
      #     -e "VITE_API_URL=http://localhost:8000"
      #     -e "VITE_PORT=3000"
      #     --expose=3000
      #     -p "3000:3000"
      #     node:20-alpine
      #     npx vite --host 0.0.0.0

      # - name: Test
      #   run: npm run test:e2e:headless

      # - name: Enviar email em caso de falha
      #   if: ${{ failure() }}
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: smtp.office365.com
      #     server_port: 587
      #     username: mckatoo@outlook.com
      #     password: ${{ secrets.SMTP_PASSWORD }}
      #     subject: Github Actions job result
      #     to: mckatoo@gmail.com
      #     from: iKatoo Repository
      #     html_body: Os testes E2E do repositório <a href="https://${{github.repository}}/tree/${{github.ref_name}}">${{github.repository}}</a> falharam. Por favor, verifique e corrija o código.
