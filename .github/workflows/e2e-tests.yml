name: Tests

on: [push, workflow_dispatch]

jobs:
  e2e_tests:
    runs-on: ubuntu-latest

    env:
      VITE_API_URL: http://localhost:8000
      VITE_PORT: 3000

      BACKEND_PORT: 8000

      POSTGRES_HOSTNAME: postgres
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DBNAME: postgres

      ADMINER_PORT: 8080

      PRIVATE_KEY: e4194215d4e0f163b67aae74
      REFRESH_PRIVATE_KEY: 3525f72ce9a6d9a7e7293549

      CLOUDINARY_APIKEY: ${{ secrets.CLOUDINARY_APIKEY }}
      CLOUDINARY_APISECRET: ${{ secrets.CLOUDINARY_APISECRET }}
      CLOUDINARY_CLOUDNAME: mckatoo
      CLOUDINARY_FOLDER: ikatoo
      CLOUDINARY_URL: cloudinary://${{ secrets.CLOUDINARY_APIKEY }}:${{ secrets.CLOUDINARY_APISECRET }}@mckatoo

      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_SECURE: true
      SMTP_SERVER_ADDRESS: smtp.gmail.com
      SMTP_SERVER_PORT: 465
      SMTP_USERNAME: mckatoo@gmail.com

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_DB: ${POSTGRES_DB}
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      backend:
        image: ghcr.io/ikatoo/backend:dev
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GHP_TOKEN }}
        env:
          PORT: ${BACKEND_PORT}
          POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_DBNAME: ${POSTGRES_DBNAME}
          PRIVATE_KEY: ${PRIVATE_KEY}
          REFRESH_PRIVATE_KEY: ${REFRESH_PRIVATE_KEY}
          CLOUDINARY_APIKEY: ${CLOUDINARY_APIKEY}
          CLOUDINARY_APISECRET: ${CLOUDINARY_APISECRET}
          CLOUDINARY_CLOUDNAME: ${CLOUDINARY_CLOUDNAME}
          CLOUDINARY_FOLDER: ${CLOUDINARY_FOLDER}
          CLOUDINARY_URL: ${CLOUDINARY_URL}
          SMTP_PASSWORD: ${SMTP_PASSWORD}
          SMTP_SECURE: ${SMTP_SECURE}
          SMTP_SERVER_ADDRESS: ${SMTP_SERVER_ADDRESS}
          SMTP_SERVER_PORT: ${SMTP_SERVER_PORT}
          SMTP_USERNAME: ${SMTP_USERNAME}

    container:
      image: postgres:14

    steps:
      - name: Checkout Frontend Repository
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref_name}}

      - name: Create Tables and Initial User
        env:
          PGPASSWORD: $POSTGRES_PASSWORD
        run: psql -v ON_ERROR_STOP=1 --host postgres --username postgres --dbname postgres -a -f ./docker/backend/init.sql

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm ci

      - name: Run Vite on Docker Compose
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: ./docker/vite/compose.yml

      - name: Test
        run: npm run test:e2e:headless

      - name: Enviar email em caso de falha
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.office365.com
          server_port: 587
          username: mckatoo@outlook.com
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Github Actions job result
          to: mckatoo@gmail.com
          from: iKatoo Repository
          html_body: Os testes E2E do repositório <a href="https://${{github.repository}}/tree/${{github.ref_name}}">${{github.repository}}</a> falharam. Por favor, verifique e corrija o código.
